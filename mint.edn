; parameters
(def ipfs-runtime "QmSjdpXYK97ULFuryb7eoxCCVUHFQpH4pxUcXbxswiyqwb")
(def uint256-max "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
(def include-cost uint256-max) ; uint256 max - don't allow inclusion

; contracts abis
(def template-abi "[{
      \"inputs\": [
        {
          \"internalType\": \"bytes\",
          \"name\": \"immutableData\",
          \"type\": \"bytes\"
        },
        {
          \"internalType\": \"bytes\",
          \"name\": \"mutableData\",
          \"type\": \"bytes\"
        },
        {
          \"internalType\": \"bytes32\",
          \"name\": \"ipfsRuntime\",
          \"type\": \"bytes32\"
        },
        {
          \"internalType\": \"uint160[]\",
          \"name\": \"references\",
          \"type\": \"uint160[]\"
        },
        {
          \"internalType\": \"bytes32[]\",
          \"name\": \"storageCids\",
          \"type\": \"bytes32[]\"
        },
        {
          \"internalType\": \"uint64[]\",
          \"name\": \"storageSizes\",
          \"type\": \"uint64[]\"
        },
        {
          \"internalType\": \"uint256\",
          \"name\": \"includeCost\",
          \"type\": \"uint256\"
        }
      ],
      \"name\": \"upload\",
      \"outputs\": [],
      \"stateMutability\": \"nonpayable\",
      \"type\": \"function\"
    }]")

(defchain minter
  "src/live-chain-binary" (FS.Read :Bytes true) = .immutableData
  "src/live-chain-env-binary" (FS.Read :Bytes true) = .mutableData
  ipfs-runtime (FromBase58) (Slice :From 2) = .ipfsRuntime ; remove multihash prefix
  include-cost (BigInt) (BigInt.ToBytes) = .includeCost
  [.immutableData .mutableData .ipfsRuntime [] [] [] .includeCost]
  (Eth.EncodeCall template-abi "upload")
  (ToHex) (Log "Call Input"))

(defnode main)
(schedule main minter)
(run main)