; parameters
(def ipfs-runtime "QmSjdpXYK97ULFuryb7eoxCCVUHFQpH4pxUcXbxswiyqwb")
(def uint256-max "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
(def include-cost uint256-max) ; uint256 max - don't allow inclusion
(def entity-amount 1)

; contracts abis
(def template-abi (slurp "src/FragmentTemplate.json"))
(def entity-abi (slurp "src/FragmentEntity.json"))

(defchain template-minter
  "src/live-chain-binary" (FS.Read :Bytes true) = .immutableData
  "src/live-chain-env-binary" (FS.Read :Bytes true) = .mutableData
  ipfs-runtime (FromBase58) (Slice :From 2) = .ipfsRuntime ; remove multihash prefix
  include-cost (BigInt) (BigInt.ToBytes) = .includeCost
  [.immutableData .mutableData .ipfsRuntime [] [] [] .includeCost]
  (Eth.EncodeCall template-abi "upload")
  (ToHex) (Log "Call Input"))

(defchain entity-minter
  "src/live-chain-env-binary" (FS.Read :Bytes true) = .mutableData
  entity-amount (BigInt) (BigInt.ToBytes) = .entityAmount
  [.mutableData .entityAmount]
  (Eth.EncodeCall entity-abi "upload")
  (ToHex) (Log "Call Input"))

(defnode main)
(schedule main template-minter)
(schedule main entity-minter)
(run main)