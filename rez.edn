; parameters
(def template-hash (slurp "src/live-chain-eth-id"))
(def token-name "My Rez Fragment n.1")
(def token-symbol "REZ1")
(def unique true)
(def uint96-max "0xffffffffffffffffffffffffffffffffffffffff") ; mint tokens forever
(def _10_000 "0x2710") ; mint 10k tokens
(def max-supply _10_000) 

; contracts abis
(def template-abi "[{
      \"inputs\": [
        {
          \"internalType\": \"uint160\",
          \"name\": \"templateHash\",
          \"type\": \"uint160\"
        },
        {
          \"internalType\": \"string\",
          \"name\": \"tokenName\",
          \"type\": \"string\"
        },
        {
          \"internalType\": \"string\",
          \"name\": \"tokenSymbol\",
          \"type\": \"string\"
        },
        {
          \"internalType\": \"bool\",
          \"name\": \"unique\",
          \"type\": \"bool\"
        },
        {
          \"internalType\": \"uint96\",
          \"name\": \"maxSupply\",
          \"type\": \"uint96\"
        }
      ],
      \"name\": \"rez\",
      \"outputs\": [
        {
          \"internalType\": \"address\",
          \"name\": \"entity\",
          \"type\": \"address\"
        },
        {
          \"internalType\": \"address\",
          \"name\": \"vault\",
          \"type\": \"address\"
        }
      ],
      \"stateMutability\": \"nonpayable\",
      \"type\": \"function\"
    }]")

(defchain minter
  template-hash (FromBase58) = .templateHash
  max-supply (BigInt) (BigInt.ToBytes) = .maxSupply
  [.templateHash token-name token-symbol unique .maxSupply]
  (Eth.EncodeCall template-abi "rez")
  (ToHex) (Log "Call Input"))

(defnode main)
(schedule main minter)
(run main)